{"version":3,"sources":["/Users/paul-n/git/ston-fi/public/sdk-api/dist/cjs/chunk-3Y7UXISK.cjs","../../node_modules/.pnpm/quick-lru@6.1.2/node_modules/quick-lru/index.js"],"names":[],"mappings":"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","file":"/Users/paul-n/git/ston-fi/public/sdk-api/dist/cjs/chunk-3Y7UXISK.cjs","sourcesContent":[null,"export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n"]}