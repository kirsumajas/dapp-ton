{"version":3,"sources":["../../src/client/types/liquidityProvision.ts"],"sourcesContent":["export const LiquidityProvisionType = {\n  /**\n   * Create new pool (requires both token amounts)\n   */\n  Initial: \"Initial\",\n  /**\n   * Add to existing pool at current ratio (auto-calculates one token amount)\n   */\n  Balanced: \"Balanced\",\n  /**\n   * Add liquidity in any ratio to existing pool (requires explicit amounts)\n   */\n  Arbitrary: \"Arbitrary\",\n} as const;\n\nexport type LiquidityProvisionType =\n  (typeof LiquidityProvisionType)[keyof typeof LiquidityProvisionType];\n\nexport type LiquidityProvisionSimulationQuery = {\n  tokenA: string;\n  tokenB: string;\n  /**\n   * The maximum possible difference between the rates that we expect and which will actually be,\n   * in fractions (for example, 0.001 is 0.1%)\n   *\n   * Recommended value is 0.01 (1%)\n   */\n  slippageTolerance: string;\n  /**\n   * User's wallet address for balance checks (optional).\n   * When provided, returns current LP account balances if exists.\n   */\n  walletAddress?: string;\n} & (\n  | {\n      provisionType: Extract<LiquidityProvisionType, \"Initial\">;\n      tokenAUnits: string;\n      tokenBUnits: string;\n    }\n  | {\n      provisionType: Extract<LiquidityProvisionType, \"Balanced\">;\n      poolAddress: string;\n      tokenAUnits: string;\n      tokenBUnits?: never;\n    }\n  | {\n      provisionType: Extract<LiquidityProvisionType, \"Balanced\">;\n      poolAddress: string;\n      tokenAUnits?: never;\n      tokenBUnits: string;\n    }\n  | {\n      provisionType: Extract<LiquidityProvisionType, \"Arbitrary\">;\n      poolAddress: string;\n      tokenAUnits: string;\n      tokenBUnits: string;\n    }\n);\n\nexport type LiquidityProvisionSimulationResponse = {\n  provision_type: LiquidityProvisionType;\n  router_address: string;\n  pool_address: string;\n  token_a: string;\n  token_b: string;\n  token_a_units: string;\n  token_b_units: string;\n  lp_account_address: string;\n  lp_account_token_a_balance: string;\n  lp_account_token_b_balance: string;\n  estimated_lp_units: string;\n  min_lp_units: string;\n  min_token_a_units: string;\n  min_token_b_units: string;\n  lp_total_supply: string;\n};\n"],"mappings":";AAAO,IAAM,yBAAyB;AAAA;AAAA;AAAA;AAAA,EAIpC,SAAS;AAAA;AAAA;AAAA;AAAA,EAIT,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,WAAW;AACb;","names":[]}