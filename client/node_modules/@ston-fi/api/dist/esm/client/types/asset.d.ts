declare const AssetKind: {
    readonly Ton: "Ton";
    readonly Wton: "Wton";
    readonly Jetton: "Jetton";
};
type AssetKind = keyof typeof AssetKind;
declare const AssetTag: {
    readonly Essential: "asset:essential";
    readonly Blacklisted: "asset:blacklisted";
    readonly Deprecated: "asset:deprecated";
    readonly DefaultSymbol: "asset:default_symbol";
    readonly LiquidityNo: "asset:liquidity:no";
    readonly LiquidityMedium: "asset:liquidity:medium";
    readonly LiquidityLow: "asset:liquidity:low";
    readonly LiquidityHigh: "asset:liquidity:high";
    readonly LiquidityVeryHigh: "asset:liquidity:very_high";
    readonly Popular: "asset:popular";
    readonly WalletHasBalance: "asset:wallet_has_balance";
    readonly WalletHasLiquidityInPool: "asset:wallet_has_liquidity_in_pool";
    readonly Taxable: "asset:taxable";
    /** @deprecated use LiquidityNo instead */
    readonly NoLiquidity: "no_liquidity";
    /** @deprecated use LiquidityLow instead */
    readonly LowLiquidity: "low_liquidity";
    /** @deprecated use LiquidityHigh instead */
    readonly HighLiquidity: "high_liquidity";
};
type AssetTag = (typeof AssetTag)[keyof typeof AssetTag];
type AssetInfoResponse = {
    balance?: string | null;
    blacklisted: boolean;
    community: boolean;
    contract_address: string;
    decimals: number;
    default_symbol: boolean;
    deprecated: boolean;
    dex_price_usd?: string | null;
    display_name?: string | null;
    image_url?: string | null;
    kind: AssetKind;
    priority: number;
    symbol: string;
    third_party_price_usd?: string | null;
    wallet_address?: string | null;
    popularity_index?: number;
    tags: AssetTag[];
    custom_payload_api_uri?: string;
    extensions?: string[];
};
type AssetV2Meta = {
    decimals?: number;
    symbol?: string;
    display_name?: string;
    image_url?: string;
    custom_payload_api_uri?: string;
};
type AssetInfoV2Response = {
    contract_address: string;
    kind: AssetKind;
    balance?: string;
    dex_price_usd?: string;
    meta?: AssetV2Meta;
    pair_priority?: number;
    popularity_index?: number;
    tags?: AssetTag[];
    wallet_address?: string;
    extensions?: string[];
};

export { type AssetInfoResponse, type AssetInfoV2Response, AssetKind, AssetTag };
