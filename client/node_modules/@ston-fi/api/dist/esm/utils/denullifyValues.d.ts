type RecursivelyReplaceNullWithUndefined<T> = T extends null ? undefined : T extends Date ? T : {
    [K in keyof T]: T[K] extends (infer U)[] ? RecursivelyReplaceNullWithUndefined<U>[] : RecursivelyReplaceNullWithUndefined<T[K]>;
};
/**
 * Recursively replace all `null` values with `undefined` in the **first level** of the passed object.
 *
 * @see [implementation by jtomaszewski](https://github.com/apollographql/apollo-client/issues/2412#issuecomment-755449680)
 *
 * @param obj Object with possible `null` values.
 * @returns Object where all `null` values are replaced with `undefined`.
 */
declare function denullifyValues<T>(obj: T): RecursivelyReplaceNullWithUndefined<T>;

export { denullifyValues };
