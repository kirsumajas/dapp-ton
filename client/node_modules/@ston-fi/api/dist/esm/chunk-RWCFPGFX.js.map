{"version":3,"sources":["../../node_modules/.pnpm/map-obj@5.0.0/node_modules/map-obj/index.js","../../node_modules/.pnpm/camelcase@8.0.0/node_modules/camelcase/index.js","../../node_modules/.pnpm/camelcase-keys@9.1.3/node_modules/camelcase-keys/index.js","../../src/utils/camelcaseKeys.ts"],"sourcesContent":["const isObject = value => typeof value === 'object' && value !== null;\n\n// Customized for this use-case\nconst isObjectCustom = value =>\n\tisObject(value)\n\t&& !(value instanceof RegExp)\n\t&& !(value instanceof Error)\n\t&& !(value instanceof Date);\n\nexport const mapObjectSkip = Symbol('mapObjectSkip');\n\nconst _mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n\toptions = {\n\t\tdeep: false,\n\t\ttarget: {},\n\t\t...options,\n\t};\n\n\tif (isSeen.has(object)) {\n\t\treturn isSeen.get(object);\n\t}\n\n\tisSeen.set(object, options.target);\n\n\tconst {target} = options;\n\tdelete options.target;\n\n\tconst mapArray = array => array.map(element => isObjectCustom(element) ? _mapObject(element, mapper, options, isSeen) : element);\n\tif (Array.isArray(object)) {\n\t\treturn mapArray(object);\n\t}\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tconst mapResult = mapper(key, value, object);\n\n\t\tif (mapResult === mapObjectSkip) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [newKey, newValue, {shouldRecurse = true} = {}] = mapResult;\n\n\t\t// Drop `__proto__` keys.\n\t\tif (newKey === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n\t\t\tnewValue = Array.isArray(newValue)\n\t\t\t\t? mapArray(newValue)\n\t\t\t\t: _mapObject(newValue, mapper, options, isSeen);\n\t\t}\n\n\t\ttarget[newKey] = newValue;\n\t}\n\n\treturn target;\n};\n\nexport default function mapObject(object, mapper, options) {\n\tif (!isObject(object)) {\n\t\tthrow new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n\t}\n\n\treturn _mapObject(object, mapper, options);\n}\n","const UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase, preserveConsecutiveUppercase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\tlet isLastLastCharPreserved = false;\n\n\tfor (let index = 0; index < string.length; index++) {\n\t\tconst character = string[index];\n\t\tisLastLastCharPreserved = index > 2 ? string[index - 3] === '-' : true;\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, index) + '-' + string.slice(index);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\tindex++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character) && (!isLastLastCharPreserved || preserveConsecutiveUppercase)) {\n\t\t\tstring = string.slice(0, index - 1) + '-' + string.slice(index - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replaceAll(LEADING_CAPITAL, match => toLowerCase(match));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input\n\t\t.replaceAll(NUMBERS_AND_IDENTIFIER, (match, pattern, offset) => ['_', '-'].includes(input.charAt(offset + match.length)) ? match : toUpperCase(match))\n\t\t.replaceAll(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier));\n};\n\nexport default function camelCase(input, options) {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options,\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false\n\t\t? string => string.toLowerCase()\n\t\t: string => string.toLocaleLowerCase(options.locale);\n\n\tconst toUpperCase = options.locale === false\n\t\t? string => string.toUpperCase()\n\t\t: string => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\tif (SEPARATORS.test(input)) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase, options.preserveConsecutiveUppercase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\tinput = options.preserveConsecutiveUppercase ? preserveConsecutiveUppercase(input, toLowerCase) : toLowerCase(input);\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n}\n","import mapObject from 'map-obj';\nimport camelCase from 'camelcase';\nimport QuickLru from 'quick-lru';\n\nconst has = (array, key) => array.some(element => {\n\tif (typeof element === 'string') {\n\t\treturn element === key;\n\t}\n\n\telement.lastIndex = 0;\n\n\treturn element.test(key);\n});\n\nconst cache = new QuickLru({maxSize: 100_000});\n\n// Reproduces behavior from `map-obj`.\nconst isObject = value =>\n\ttypeof value === 'object'\n\t\t&& value !== null\n\t\t&& !(value instanceof RegExp)\n\t\t&& !(value instanceof Error)\n\t\t&& !(value instanceof Date);\n\nconst transform = (input, options = {}) => {\n\tif (!isObject(input)) {\n\t\treturn input;\n\t}\n\n\tconst {\n\t\texclude,\n\t\tpascalCase = false,\n\t\tstopPaths,\n\t\tdeep = false,\n\t\tpreserveConsecutiveUppercase = false,\n\t} = options;\n\n\tconst stopPathsSet = new Set(stopPaths);\n\n\tconst makeMapper = parentPath => (key, value) => {\n\t\tif (deep && isObject(value)) {\n\t\t\tconst path = parentPath === undefined ? key : `${parentPath}.${key}`;\n\n\t\t\tif (!stopPathsSet.has(path)) {\n\t\t\t\tvalue = mapObject(value, makeMapper(path));\n\t\t\t}\n\t\t}\n\n\t\tif (!(exclude && has(exclude, key))) {\n\t\t\tconst cacheKey = pascalCase ? `${key}_` : key;\n\n\t\t\tif (cache.has(cacheKey)) {\n\t\t\t\tkey = cache.get(cacheKey);\n\t\t\t} else {\n\t\t\t\tconst returnValue = camelCase(key, {pascalCase, locale: false, preserveConsecutiveUppercase});\n\n\t\t\t\tif (key.length < 100) { // Prevent abuse\n\t\t\t\t\tcache.set(cacheKey, returnValue);\n\t\t\t\t}\n\n\t\t\t\tkey = returnValue;\n\t\t\t}\n\t\t}\n\n\t\treturn [key, value];\n\t};\n\n\treturn mapObject(input, makeMapper(undefined));\n};\n\nexport default function camelcaseKeys(input, options) {\n\tif (Array.isArray(input)) {\n\t\treturn Object.keys(input).map(key => transform(input[key], options));\n\t}\n\n\treturn transform(input, options);\n}\n","import _camelcaseKeys from \"camelcase-keys\";\n\n/**\n * Transforms object keys to camel case.\n * Powered by [camelcase-keys](https://github.com/sindresorhus/camelcase-keys)\n *\n * @param obj Object with possible non-camel case keys.\n * @returns Object where all non-camel case keys are transformed to camel case.\n */\nexport function camelcaseKeys<T extends Record<string, unknown>>(val: T) {\n  return _camelcaseKeys(val, { deep: true });\n}\n"],"mappings":"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","names":["preserveConsecutiveUppercase","isObject","preserveConsecutiveUppercase","camelcaseKeys"]}