import {
  decamelizeKeys
} from "./chunk-A4P3E7XZ.js";
import {
  toUrlSafe
} from "./chunk-OKU6EODG.js";

// src/client/mappers/normalizeRequest.ts
function normalizeRequest(path, options) {
  const pathWithParams = path.replace(/{([a-zA-Z0-9_]+)}/g, (_, key) => {
    var _a, _b;
    const value = (_a = options == null ? void 0 : options.query) == null ? void 0 : _a[key];
    if (!value) {
      throw new Error(`Missing value for path parameter "${key}"`);
    }
    (_b = options == null ? void 0 : options.query) == null ? true : delete _b[key];
    return toUrlSafe(value);
  });
  if (options == null ? void 0 : options.query) {
    for (const key in options.query) {
      const value = options.query[key];
      if (typeof value === "string") {
        options.query[key] = toUrlSafe(value);
      }
    }
    options.query = decamelizeKeys(options.query);
  }
  return [pathWithParams, options];
}

export {
  normalizeRequest
};
//# sourceMappingURL=chunk-KBV5UDV5.js.map