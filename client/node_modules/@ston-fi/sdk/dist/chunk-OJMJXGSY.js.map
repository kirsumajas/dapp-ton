{"version":3,"sources":["../src/client/Client.ts"],"sourcesContent":["import { StonApiClient } from \"@ston-fi/api\";\nimport { Address, TonClient, TupleReader, beginCell } from \"@ton/ton\";\n\nexport class Client extends TonClient {\n  private stonApiClient: StonApiClient;\n\n  constructor(\n    options: ConstructorParameters<typeof TonClient>[0] & {\n      stonApiClient?: StonApiClient;\n    },\n  ) {\n    super(options);\n\n    this.stonApiClient = options.stonApiClient ?? new StonApiClient();\n  }\n\n  public override async callGetMethod(\n    ...args: Parameters<TonClient[\"callGetMethod\"]>\n  ) {\n    if (args[1] === \"get_wallet_address\" && args[2]?.[0]?.type === \"slice\") {\n      try {\n        const jettonWalletAddress =\n          await this.stonApiClient.getJettonWalletAddress({\n            jettonAddress: args[0].toString(),\n            ownerAddress: args[2][0].cell.beginParse().loadAddress().toString(),\n          });\n\n        return {\n          gas_used: 0,\n          stack: new TupleReader([\n            {\n              type: \"slice\",\n              cell: beginCell()\n                .storeAddress(Address.parse(jettonWalletAddress))\n                .endCell(),\n            },\n          ]),\n        };\n      } catch {\n        //\n      }\n    }\n\n    return super.callGetMethod(...args);\n  }\n}\n"],"mappings":";AAAA,SAAS,qBAAqB;AAC9B,SAAS,SAAS,WAAW,aAAa,iBAAiB;AAEpD,IAAM,SAAN,cAAqB,UAAU;AAAA,EAC5B;AAAA,EAER,YACE,SAGA;AACA,UAAM,OAAO;AAEb,SAAK,gBAAgB,QAAQ,iBAAiB,IAAI,cAAc;AAAA,EAClE;AAAA,EAEA,MAAsB,iBACjB,MACH;AACA,QAAI,KAAK,CAAC,MAAM,wBAAwB,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,SAAS;AACtE,UAAI;AACF,cAAM,sBACJ,MAAM,KAAK,cAAc,uBAAuB;AAAA,UAC9C,eAAe,KAAK,CAAC,EAAE,SAAS;AAAA,UAChC,cAAc,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,WAAW,EAAE,YAAY,EAAE,SAAS;AAAA,QACpE,CAAC;AAEH,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAO,IAAI,YAAY;AAAA,YACrB;AAAA,cACE,MAAM;AAAA,cACN,MAAM,UAAU,EACb,aAAa,QAAQ,MAAM,mBAAmB,CAAC,EAC/C,QAAQ;AAAA,YACb;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,QAAQ;AAAA,MAER;AAAA,IACF;AAEA,WAAO,MAAM,cAAc,GAAG,IAAI;AAAA,EACpC;AACF;","names":[]}