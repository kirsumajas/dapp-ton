{"version":3,"sources":["/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-WF6EZ2CW.cjs","../src/contracts/core/JettonMinter.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACE;AACF,wDAA6B;AAC7B;AACA;ACPA,+BAAiD;AAM1C,IAAM,aAAA,EAAN,MAAA,QAA2B,2BAAS;AAAA,EACzC,MAAM,gBAAA,CACJ,QAAA,EACA,YAAA,EACA;AACA,IAAA,MAAM,OAAA,EAAS,MAAM,QAAA,CAAS,GAAA,CAAI,oBAAA,EAAsB;AAAA,MACtD;AAAA,QACE,IAAA,EAAM,OAAA;AAAA,QACN,IAAA,EAAM,4BAAA,CAAU,CAAE,YAAA,CAAa,yCAAA,YAAsB,CAAC,CAAA,CAAE,OAAA,CAAQ;AAAA,MAClE;AAAA,IACF,CAAC,CAAA;AAED,IAAA,OAAO,MAAA,CAAO,KAAA,CAAM,WAAA,CAAY,CAAA;AAAA,EAClC;AAAA,EAEA,MAAM,aAAA,CAAc,QAAA,EAA4B;AAC9C,IAAA,MAAM,OAAA,EAAS,MAAM,QAAA,CAAS,GAAA,CAAI,iBAAA,EAAmB,CAAC,CAAC,CAAA;AAEvD,IAAA,MAAM,WAAA,EAAa;AAAA,MACjB,WAAA,EAAa,MAAA,CAAO,KAAA,CAAM,aAAA,CAAc,CAAA;AAAA,MACxC,YAAA,EAAc,OAAA,CAAQ,MAAA,CAAO,KAAA,CAAM,UAAA,CAAW,CAAC,CAAA;AAAA,MAC/C,YAAA,EAAc,MAAA,CAAO,KAAA,CAAM,cAAA,CAAe,CAAA;AAAA,MAC1C,UAAA,EAAY,MAAA,CAAO,KAAA,CAAM,QAAA,CAAS,CAAA;AAAA,MAClC,gBAAA,EAAkB,MAAA,CAAO,KAAA,CAAM,QAAA,CAAS;AAAA,IAC1C,CAAA;AAEA,IAAA,OAAO,UAAA;AAAA,EACT;AACF,CAAA;ADHA;AACA;AACE;AACF,oCAAC","file":"/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-WF6EZ2CW.cjs","sourcesContent":[null,"import { type ContractProvider, beginCell } from \"@ton/ton\";\n\nimport type { AddressType } from \"../../types\";\nimport { toAddress } from \"../../utils/toAddress\";\nimport { Contract } from \"./Contract\";\n\nexport class JettonMinter extends Contract {\n  async getWalletAddress(\n    provider: ContractProvider,\n    ownerAddress: AddressType,\n  ) {\n    const result = await provider.get(\"get_wallet_address\", [\n      {\n        type: \"slice\",\n        cell: beginCell().storeAddress(toAddress(ownerAddress)).endCell(),\n      },\n    ]);\n\n    return result.stack.readAddress();\n  }\n\n  async getJettonData(provider: ContractProvider) {\n    const result = await provider.get(\"get_jetton_data\", []);\n\n    const jettonData = {\n      totalSupply: result.stack.readBigNumber(),\n      canIncSupply: Boolean(result.stack.readNumber()),\n      adminAddress: result.stack.readAddressOpt(),\n      contentRaw: result.stack.readCell(),\n      jettonWalletCode: result.stack.readCell(),\n    };\n\n    return jettonData;\n  }\n}\n"]}