{"version":3,"sources":["../src/contracts/dex/v2_1/router/CPIRouterV2_1.ts"],"sourcesContent":["import type { ContractProvider } from \"@ton/ton\";\n\nimport type { AddressType } from \"../../../../types\";\nimport { DEX_TYPE } from \"../../constants\";\nimport { CPIPoolV2_1 } from \"../pool/CPIPoolV2_1\";\nimport { BaseRouterV2_1 } from \"./BaseRouterV2_1\";\n\nexport class CPIRouterV2_1 extends BaseRouterV2_1 {\n  public static readonly dexType = DEX_TYPE.CPI;\n\n  public override async getPool(\n    provider: ContractProvider,\n    params: {\n      token0: AddressType;\n      token1: AddressType;\n    },\n  ) {\n    const poolAddress = await this.getPoolAddressByJettonMinters(\n      provider,\n      params,\n    );\n\n    return CPIPoolV2_1.create(poolAddress);\n  }\n}\n"],"mappings":";;;;;;;;;;;AAOO,IAAM,gBAAN,cAA4B,eAAe;AAAA,EAChD,OAAuB,UAAU,SAAS;AAAA,EAE1C,MAAsB,QACpB,UACA,QAIA;AACA,UAAM,cAAc,MAAM,KAAK;AAAA,MAC7B;AAAA,MACA;AAAA,IACF;AAEA,WAAO,YAAY,OAAO,WAAW;AAAA,EACvC;AACF;","names":[]}