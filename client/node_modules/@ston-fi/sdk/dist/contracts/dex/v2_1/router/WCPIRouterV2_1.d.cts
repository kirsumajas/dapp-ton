import { ContractProvider } from '@ton/ton';
import { AddressType } from '../../../../types.cjs';
import { WCPIPoolV2_1 } from '../pool/WCPIPoolV2_1.cjs';
import { BaseRouterV2_1, BaseRouterV2_1Options } from './BaseRouterV2_1.cjs';
import '../pool/BasePoolV2_1.cjs';
import '../../../core/Contract.cjs';
import '../../../core/JettonMinter.cjs';
import '../../../core/JettonWallet.cjs';
import '../../constants.cjs';
import '../LpAccount/LpAccountV2_1.cjs';
import '../../../pTON/AbstractPton.cjs';
import '../../../pTON/constants.cjs';
import '../vault/VaultV2_1.cjs';

declare class WCPIRouterV2_1 extends BaseRouterV2_1 {
    static readonly dexType: "weighted_const_product";
    static readonly gasConstants: {
        swapJettonToJetton: {
            gasAmount: bigint;
            forwardGasAmount: bigint;
        };
        swapJettonToTon: {
            gasAmount: bigint;
            forwardGasAmount: bigint;
        };
        swapTonToJetton: {
            forwardGasAmount: bigint;
        };
        provideLpJetton: {
            gasAmount: bigint;
            forwardGasAmount: bigint;
        };
        provideLpTon: {
            forwardGasAmount: bigint;
        };
        singleSideProvideLpJetton: {
            gasAmount: bigint;
            forwardGasAmount: bigint;
        };
        singleSideProvideLpTon: {
            forwardGasAmount: bigint;
        };
    };
    constructor(address: AddressType, { gasConstants, ...options }?: BaseRouterV2_1Options);
    getPool(provider: ContractProvider, params: {
        token0: AddressType;
        token1: AddressType;
    }): Promise<WCPIPoolV2_1>;
}

export { WCPIRouterV2_1 };
