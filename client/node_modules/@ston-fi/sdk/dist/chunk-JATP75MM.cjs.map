{"version":3,"sources":["/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-JATP75MM.cjs","../src/contracts/dex/v2_2/router/StableRouterV2_2.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACE;AACF,wDAA6B;AAC7B;AACE;AACF,wDAA6B;AAC7B;AACE;AACF,wDAA6B;AAC7B;AACE;AACF,wDAA6B;AAC7B;AACA;ACPO,IAAM,iBAAA,YAAN,MAAA,QAA+B,mCAAiB;AAAA,EACrD,4BAAgC,QAAA,EAAuB,6BAAA,CAAY,KAAA;AAAA,EAEnE,MAAsB,OAAA,CACpB,QAAA,EACA,MAAA,EAIA;AACA,IAAA,MAAM,YAAA,EAAc,MAAM,IAAA,CAAK,6BAAA;AAAA,MAC7B,QAAA;AAAA,MACA;AAAA,IACF,CAAA;AAEA,IAAA,OAAO,gCAAA,CAAe,MAAA,CAAO,WAAW,CAAA;AAAA,EAC1C;AAAA,EAEA,MAAsB,QAAA,CACpB,QAAA,EACA,MAAA,EAIA;AACA,IAAA,MAAM,YAAA,EAAc,QAAA,CAAS,IAAA,CAAK,8BAAA,CAAa,MAAA,CAAO,MAAA,CAAO,WAAW,CAAC,CAAA;AAEzE,IAAA,MAAM,aAAA,EAAe,MAAM,IAAA,CAAK,eAAA,CAAgB,QAAA,EAAU;AAAA,MACxD,IAAA,EAAM,MAAA,CAAO,IAAA;AAAA,MACb,WAAA,EAAa,MAAM,WAAA,CAAY,gBAAA,CAAiB,IAAA,CAAK,OAAO;AAAA,IAC9D,CAAC,CAAA;AAED,IAAA,OAAO,2BAAA,CAAU,MAAA,CAAO,YAAY,CAAA;AAAA,EACtC;AACF,iCAAA;ADRA;AACA;AACE;AACF,4CAAC","file":"/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-JATP75MM.cjs","sourcesContent":[null,"import type { ContractProvider } from \"@ton/ton\";\n\nimport type { AddressType } from \"../../../../types\";\nimport { JettonMinter } from \"../../../core/JettonMinter\";\nimport { DEX_VERSION } from \"../../constants\";\nimport { StableRouterV2_1 } from \"../../v2_1/router/StableRouterV2_1\";\nimport { StablePoolV2_2 } from \"../pool/StablePoolV2_2\";\nimport { VaultV2_2 } from \"../vault/VaultV2_2\";\n\nexport class StableRouterV2_2 extends StableRouterV2_1 {\n  public static override readonly version: DEX_VERSION = DEX_VERSION.v2_2;\n\n  public override async getPool(\n    provider: ContractProvider,\n    params: {\n      token0: AddressType;\n      token1: AddressType;\n    },\n  ) {\n    const poolAddress = await this.getPoolAddressByJettonMinters(\n      provider,\n      params,\n    );\n\n    return StablePoolV2_2.create(poolAddress);\n  }\n\n  public override async getVault(\n    provider: ContractProvider,\n    params: {\n      user: AddressType;\n      tokenMinter: AddressType;\n    },\n  ) {\n    const tokenMinter = provider.open(JettonMinter.create(params.tokenMinter));\n\n    const vaultAddress = await this.getVaultAddress(provider, {\n      user: params.user,\n      tokenWallet: await tokenMinter.getWalletAddress(this.address),\n    });\n\n    return VaultV2_2.create(vaultAddress);\n  }\n}\n"]}